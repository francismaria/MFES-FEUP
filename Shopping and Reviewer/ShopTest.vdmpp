class ShopTest is subclass of MyTest
types
values
instance variables
	
	-- Shop instance
	private shop : Shop;
	
operations

	-------------------------------------------------------------
	-- Tests:
	--		: the successful creation of a shop.
	-------------------------------------------------------------
	private createShop: () ==> ()
	createShop() ==
	(
		shop := new Shop("Loja Testes");
		assertEqual(shop.getRegisteredUsers(),{});
		assertEqual(shop.getRegisteredProducts(),{|->});
	);
	
	-------------------------------------------------------------
	-- Tests:
	--		: the number of users of type Seller that are 
	--	registered in the shop.
	-------------------------------------------------------------
	private getNumberOfSellers: () ==> ()
	getNumberOfSellers() ==
	(
		shop.register("Seller1", "pswd1", <SELLER>);
		assert(shop.login("Seller1", "pswd1") = true);
		shop.logout();
		shop.register("Seller2","pswd2", <SELLER>);
		shop.logout();
		shop.register("Costumer1","pswd3", <COSTUMER>);
		shop.logout();
		assert(shop.getNumberOfSellers() = 2);
	);
	
	-------------------------------------------------------------
	-- Tests:
	--		: the number of users of type Seller that are 
	--	registered in the shop.
	-------------------------------------------------------------
	private getNumberOfCostumers: () ==> ()
	getNumberOfCostumers() ==
	(
		assert(shop.getNumberOfCostumers() = 1);
	);
	
	-------------------------------------------------------------
	-- Tests:
	--		: the successful logging in and out of a user in the
	--	shop.
	-------------------------------------------------------------
	private userLogging: () ==> ()
	userLogging() ==
	(
		assertEqual(shop.login("Seller1", "pswd1"), true);
		assert(shop.getLoggedUser().getUsername() = "Seller1");
		shop.logout();
		assertEqual(shop.login("Seller2", "pswd2"), true);
		assert(shop.getLoggedUser().getUsername() = "Seller2");
	);
	
	-------------------------------------------------------------
	-- Tests:
	--		: the correct number of products registererd in the 
	--	shop
	-------------------------------------------------------------
	private getNumberOfProducts: () ==> ()
	getNumberOfProducts() ==
	(
		dcl prod : Product := new Product("P1", "Great product! Brand new", 15.99), seller : Seller;
		assertEqual(shop.getNumberOfProducts(), Product`getNumberOfProducts());
		assertEqual(shop.login("Seller1", "pswd1"), true);
		seller := shop.getLoggedUser();
		seller.addNewProduct(prod);
		shop.updateProducts();
		seller.addNewProduct(prod);
		assertEqual(shop.getNumberOfProducts(), Product`getNumberOfProducts());
	);
	
	-- Entry point
	public static main: () ==> ()
	main() ==
	(
		dcl test : ShopTest := new ShopTest();
		
		test.createShop();
		test.getNumberOfSellers();
		test.getNumberOfCostumers();
		test.userLogging();
		test.getNumberOfProducts();
	);
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end ShopTest