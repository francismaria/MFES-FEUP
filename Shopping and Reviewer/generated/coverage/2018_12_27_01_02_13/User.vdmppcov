class User
types
	public String = seq of char;
	public Date :: year : nat1
								 month : nat1
								 day : nat1;		
					 
values

instance variables

	private ID : nat1;
	private username : String;
	private password : String;
	private registerDate : Date;
	
	static numberOfUsers : nat := 0; 
	inv ID < numberOfUsers;
	
operations

	public User : String * String * nat1 * nat1 * nat1 ==> User
	User(usernameExt, passwordExt, dayExt, monthExt, yearExt) == 
		(
			username := usernameExt;
			password := passwordExt;
			registerDate := mk_Date(dayExt, monthExt, yearExt);
			ID := numberOfUsers;
			numberOfUsers := numberOfUsers + 1;
		);
		
	-- ACCESSOR METHODS
		
	public getUserID: () ==> nat1
	getUserID() == 
		return ID;
	
	public getUsername: () ==> String
	getUsername() == 
		return username;
		
	public getRegisterDate: () ==> Date
	getRegisterDate() ==
		return registerDate;
		
	-- MODIFIER METHODS
	
	public setNewUsername: String ==> ()
	setNewUsername(newUsername) ==
	(
		username := newUsername;
	);
		
	public setNewPassword: String ==> ()
	setNewPassword(newPassword) ==
	(
		password := newPassword;
	);
		
		
functions
traces

end User