class Seller is subclass of User

types
  public Products = set of Product;

values


instance variables
-- conjunto de produtos que estÃ¡ a vender
	--private availableProducts : Products := {};
	
	private products : map nat1 to Product := { |-> };
	
	--var to keep track of the seller products IDS
	private productsIDs : nat1 := 1;
	
	
operations
	------------------------------------------
	-- CONSTRUCTOR
	------------------------------------------
	
	public Seller : String * String ==> Seller
	Seller(usernameExt, passwordExt) == 
	(
		User`User(usernameExt, passwordExt);
	);
	
	------------------------------------------
	-- ACCESSOR METHODS 
	------------------------------------------

	public getProduct: nat1 ==> Product
	getProduct(id) ==
	(
		return products(id);
	)
	pre id in set dom products;
	
	public getAllProducts: () ==> Products
	getAllProducts() ==
	(
		return rng products;
	);
	
	public getType: () ==> UserType
	getType() ==
	(
		return <SELLER>;
	);
	
	------------------------------------------
	-- MODIFIER METHODS
	------------------------------------------
	
	public addNewProduct: Product ==> ()
	addNewProduct(newProduct) ==
	(	
		products := products munion { productsIDs |-> newProduct };
		productsIDs := productsIDs + 1;
	)
	--pre newProduct <> nil;
	
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here

end Seller